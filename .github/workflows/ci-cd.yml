name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/orbit:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/orbit:latest

  backend-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  # Specify the Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run backend tests with Mocha
      - name: Run Backend Tests
        run: npm run backend-test

      # Step 5: Ensure .nyc_output exists
      - name: Check Backend Coverage Directory
        run: ls .nyc_output || echo "Directory not found"

      # Step 6: Upload backend coverage report
      - name: Upload Backend Coverage Report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: .nyc_output/  # Ensure this path matches where nyc output is stored

  frontend-tests:
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  # Specify the Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      - name: Run Frontend Tests
        run: npm run frontend-test

      # Step 6: Ensure .nyc_output exists
      - name: Check Frontend Coverage Directory
        run: ls .nyc_output || echo "Directory not found"

      # Step 7: Upload frontend coverage report
      - name: Upload Frontend Coverage Report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage-report
          path: .nyc_output/  # Ensure this path matches where nyc output is stored


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List files
        run: ls -R

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'

      - name: Create .kube directory
        run: mkdir -p $HOME/.kube

      - name: Set up Kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
