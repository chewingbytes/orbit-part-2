name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: bryan19191919191919/orbit:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build Docker image locally
        run: docker build -t orbit:latest .

      - name: Run application in background
        run: |
          docker run -d -p 3000:3000 orbit:latest

      - name: Wait for the app to be up and running
        run: |
          sleep 10  # Adjust the sleep time as needed to wait for the app to fully start

      - name: Run backend tests with NYC
        run: npm run backend-test

      - name: Run frontend tests with Cypress and NYC
        run: npm run frontend-test

      - name: Upload Cypress test results
        uses: actions/upload-artifact@v3
        with:
          name: cypress-results
          path: cypress/results

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List files
        run: ls -R

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'

      - name: Create .kube directory
        run: mkdir -p $HOME/.kube

      - name: Set up Kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
